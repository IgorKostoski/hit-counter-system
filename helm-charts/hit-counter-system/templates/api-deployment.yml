apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.api.name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.api.name }}
    helm.sh/chart: {{ include "hit-counter-system.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: application
spec:
  replicas: {{ .Values.api.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.api.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.api.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: application
    spec:
      containers:
        - name: {{ .Values.api.name }}
          image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag }}"
          imagePullPolicy: {{ .Values.api.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.api.config.APP_PORT | int }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ printf "%s-config" .Values.api.name }}
          env:
            {{- if .Values.postgresql.enabled }}
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-secret" .Values.postgresql.name }}
                  key: POSTGRES_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ printf "%s-secret" .Values.postgresql.name }}
                  key: POSTGRES_PASSWORD
            {{- else }}
            # If PostgreSQL not enabled by this chart, expect secrets to be managed externally
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.api.config.DB_USER_SECRET_NAME | default "external-db-user-secret" }}
                  key: username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.api.config.DB_PASSWORD_SECRET_NAME | default "external-db-password-secret" }}
                  key: password
            {{- end }}
          readinessProbe:
            httpGet:
              path: {{ .Values.api.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.api.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.api.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.api.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.api.readinessProbe.failureThreshold }}
          livenessProbe:
            httpGet:
              path: {{ .Values.api.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.api.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.api.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.api.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.api.livenessProbe.failureThreshold }}
          resources:
            {{- toYaml .Values.api.resources | nindent 16 }}